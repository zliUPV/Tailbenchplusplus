# Makefile.in generated by automake 1.16.5 from Makefile.am.
# src/sm/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# if tcl.h is not in your /usr/include, put its path here.
# I haven't found a way to locate it with autoconf yet.
#
# deathstar:
# Built-from-sources, with symbols:
# note: not on chianti:
# TCL_INCLUDE = /scratch/s/tcl/include
# TCL_LIB = -L/scratch/s/tcl/lib -ltcl8.5



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/shore-storage-manager
pkgincludedir = $(includedir)/shore-storage-manager
pkglibdir = $(libdir)/shore-storage-manager
pkglibexecdir = $(libexecdir)/shore-storage-manager
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
#am__append_1 = -features=extensions,zla \
#	-xdebugformat=stabs -DSOLARIS2 \
#	-library=stlport4 -mt -lpthread
# -pedantic requires -Wno-long-long
# TODO: fix this comment
# Let's avoid use of long long if possible, and require
# explicit C++ types based on data model of compiler.  There
# might be some cases where the underlying library function
# or system include file uses long long, in which case we will have to.
#
#
am__append_2 = -Wextra -Wall -Wno-long-long -pthread
#am__append_3 = UNKNOWN COMPILER
am__append_4 = -D__GNUC_AS__ -D_ASM
#am__append_5 = $(TARGET_FLAGS)
am__append_6 = $(TARGET_FLAGS) 
#am__append_7 = $(TARGET_FLAGS) -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 
#am__append_8 = -I$(top_srcdir)/src/compat

# --------------------------------------------------------
#
# Determine which gcc warnings to use, based on which 
# compiler version we are using.
#
# -Wno-deprecated # TODO:remove
#
# Note: gcc seems to issue a false positive warning about strict aliasing
# in the new override code, so we have to add -fno-strict-aliasing.
# --------------------------------------------------------
am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings

# /* In adition to the 3.2 warnings, prototype errors for c/objc only */
am__append_10 = 
# /* GCC 3.2 doesn't like -Wmissing-declarations and -Wnested-externs */
##am__append_11 = -Wstrict-prototypes -Wmissing-prototypes 
# /* Need this to stop warnings of normal (old) standard c++ facilities use. */
#am__append_12 = -Wstrict-prototypes \
#	-Wmissing-prototypes \
#	-Wmissing-declarations \
#	-Wnested-externs
am__append_13 = -Woverloaded-virtual 
am__append_14 = $(SYMBOLSFLAGS)
#am__append_15 = $(NOSYMBOLSFLAGS)
# PURIFY_COLLECTOR = -collector=/usr/bin/ld
#am__append_16 = $(PURIFY_LIBS)
#am__append_17 = $(check_PROGRAMS:%=%.pure)
#am__append_18 = -DPURIFY -DPURIFY_ZERO -I$(PURIFY_INCLUDE) 
# QUANTIFY_COLLECTOR = -collector=/usr/bin/ld
#am__append_19 = $(QUANTIFY_LIBS)
#am__append_20 = $(check_PROGRAMS:%=%.quant)
#am__append_21 = -DQUANTIFY -I$(QUANTIFY_INCLUDE) 
# PURECOV_COLLECTOR = -collector=/usr/bin/ld
#am__append_22 = $(PURECOV_LIBS)
#am__append_23 = $(check_PROGRAMS:%=%.purecov)
#am__append_24 = -DPURECOV -I$(PURECOV_INCLUDE) 
subdir = src/sm
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/shore-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libsm_a_AR = $(AR) $(ARFLAGS)
libsm_a_LIBADD =
am_libsm_a_OBJECTS = bf.$(OBJEXT) bf_core.$(OBJEXT) bf_htab.$(OBJEXT) \
	bf_htab_test.$(OBJEXT) bf_prefetch.$(OBJEXT) \
	btcursor.$(OBJEXT) btree.$(OBJEXT) btree_bl.$(OBJEXT) \
	btree_impl.$(OBJEXT) btree_p.$(OBJEXT) \
	btree_latch_manager.$(OBJEXT) chkpt.$(OBJEXT) \
	chkpt_serial.$(OBJEXT) common_templates.$(OBJEXT) \
	crash.$(OBJEXT) data_access_histogram.$(OBJEXT) \
	device.$(OBJEXT) dir.$(OBJEXT) file.$(OBJEXT) histo.$(OBJEXT) \
	key_ranges_map.$(OBJEXT) keyed.$(OBJEXT) zkeyed.$(OBJEXT) \
	ranges_p.$(OBJEXT) lexify.$(OBJEXT) lgrec.$(OBJEXT) \
	lid.$(OBJEXT) lock.$(OBJEXT) lock_core.$(OBJEXT) log.$(OBJEXT) \
	logrec.$(OBJEXT) logstub.$(OBJEXT) partition.$(OBJEXT) \
	log_core.$(OBJEXT) sort.$(OBJEXT) newsort.$(OBJEXT) \
	page.$(OBJEXT) pin.$(OBJEXT) pmap.$(OBJEXT) restart.$(OBJEXT) \
	rtree.$(OBJEXT) scan.$(OBJEXT) sm.$(OBJEXT) \
	sm-no-inline.$(OBJEXT) sm_du_stats.$(OBJEXT) sm_io.$(OBJEXT) \
	sm_s.$(OBJEXT) smfile.$(OBJEXT) smindex.$(OBJEXT) \
	smstats.$(OBJEXT) smthread.$(OBJEXT) vol.$(OBJEXT) \
	xct.$(OBJEXT) vtable_sm.$(OBJEXT) vtable_smthread.$(OBJEXT) \
	vtable_xct.$(OBJEXT)
libsm_a_OBJECTS = $(am_libsm_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/bf.Po ./$(DEPDIR)/bf_core.Po \
	./$(DEPDIR)/bf_htab.Po ./$(DEPDIR)/bf_htab_test.Po \
	./$(DEPDIR)/bf_prefetch.Po ./$(DEPDIR)/btcursor.Po \
	./$(DEPDIR)/btree.Po ./$(DEPDIR)/btree_bl.Po \
	./$(DEPDIR)/btree_impl.Po ./$(DEPDIR)/btree_latch_manager.Po \
	./$(DEPDIR)/btree_p.Po ./$(DEPDIR)/chkpt.Po \
	./$(DEPDIR)/chkpt_serial.Po ./$(DEPDIR)/common_templates.Po \
	./$(DEPDIR)/crash.Po ./$(DEPDIR)/data_access_histogram.Po \
	./$(DEPDIR)/device.Po ./$(DEPDIR)/dir.Po ./$(DEPDIR)/file.Po \
	./$(DEPDIR)/histo.Po ./$(DEPDIR)/key_ranges_map.Po \
	./$(DEPDIR)/keyed.Po ./$(DEPDIR)/lexify.Po \
	./$(DEPDIR)/lgrec.Po ./$(DEPDIR)/lid.Po ./$(DEPDIR)/lock.Po \
	./$(DEPDIR)/lock_core.Po ./$(DEPDIR)/log.Po \
	./$(DEPDIR)/log_core.Po ./$(DEPDIR)/logrec.Po \
	./$(DEPDIR)/logstub.Po ./$(DEPDIR)/newsort.Po \
	./$(DEPDIR)/page.Po ./$(DEPDIR)/partition.Po \
	./$(DEPDIR)/pin.Po ./$(DEPDIR)/pmap.Po ./$(DEPDIR)/ranges_p.Po \
	./$(DEPDIR)/restart.Po ./$(DEPDIR)/rtree.Po \
	./$(DEPDIR)/scan.Po ./$(DEPDIR)/sm-no-inline.Po \
	./$(DEPDIR)/sm.Po ./$(DEPDIR)/sm_du_stats.Po \
	./$(DEPDIR)/sm_io.Po ./$(DEPDIR)/sm_s.Po ./$(DEPDIR)/smfile.Po \
	./$(DEPDIR)/smindex.Po ./$(DEPDIR)/smstats.Po \
	./$(DEPDIR)/smthread.Po ./$(DEPDIR)/sort.Po ./$(DEPDIR)/vol.Po \
	./$(DEPDIR)/vtable_sm.Po ./$(DEPDIR)/vtable_smthread.Po \
	./$(DEPDIR)/vtable_xct.Po ./$(DEPDIR)/xct.Po \
	./$(DEPDIR)/zkeyed.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libsm_a_SOURCES)
DIST_SOURCES = $(libsm_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.generic \
	$(top_srcdir)/Makefile.local $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} '/home/master/Documents/Tailbenchplusplus/shore/shore-mt/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} '/home/master/Documents/Tailbenchplusplus/shore/shore-mt/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/master/Documents/Tailbenchplusplus/shore/shore-mt/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/master/Documents/Tailbenchplusplus/shore/shore-mt/config/missing' automake-1.16
AWK = gawk
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
# This clearing of CXXFLAGS is necessary to override the
# annoying -g -O2 that autoconf stuffs in there, and which
# I cannot find any other way to control.
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DTRACE = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lrt 
LTLIBOBJS = 
MAKEINFO = ${SHELL} '/home/master/Documents/Tailbenchplusplus/shore/shore-mt/config/missing' makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = shore-storage-manager
PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.
PACKAGE_NAME = Shore-Storage-Manager
PACKAGE_STRING = Shore-Storage-Manager 6.0.1
PACKAGE_TARNAME = shore-storage-manager
PACKAGE_URL = 
PACKAGE_VERSION = 6.0.1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
RMM = rm
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 6.0.1
abs_builddir = /home/master/Documents/Tailbenchplusplus/shore/shore-mt/src/sm
abs_srcdir = /home/master/Documents/Tailbenchplusplus/shore/shore-mt/src/sm
abs_top_builddir = /home/master/Documents/Tailbenchplusplus/shore/shore-mt
abs_top_srcdir = /home/master/Documents/Tailbenchplusplus/shore/shore-mt
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/master/Documents/Tailbenchplusplus/shore/shore-mt/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
uname_machine = x86_64
SUBDIRS = tests smsh

# -*- mode:Makefile -*-
# rules, macros generic to all Makefile.am
AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha

# dewitt-gw, chianti, deathstar
# ActiveTcl no-symbols installed:
TCL_INCLUDE = /scratch/nhall/tcl/include
TCL_LIB = -L/scratch/nhall/tcl/lib -ltcl8.5

# d-12, dewitt-gw:
# ActiveTcl no-symbols installed:
# TCL_INCLUDE = /u/n/h/nhall/tcl/include
# TCL_LIB = -L/u/n/h/nhall/tcl/lib -ltcl8.5

# PURE_DIR = /s/purifyplus-7.0/@sys/
# PURE_DIR = /s/purifyplus/@sys/
PURE_DIR = /s/purifyplus/amd64_rhel5
# PURE_CACHE_DIR = /scratch/nhall/pure
# d-12:
PURE_CACHE_DIR = /tmp/nhall/pure

# --------------------------------------------------------
#
# Local non-standard paths to things are in Makefile.local
#
# --------------------------------------------------------
DISTCLEANFILES = Makefile $(GENFILES)
BUILT_SOURCES = $(GENFILES)
# installdir = $(top_srcdir)/installdir
# docdir = $(installdir)/doc

# --------------------------------------------------------
#
# Initialize  
#
# --------------------------------------------------------

# that the posix-compliant clib interfaces are there (e.g., ctime_r)
# (Actually, you're supposed to get them both with _POSIX_C_SOURCE > 199506L
# but I'm not that trusting.)
ALWAYS_FLAGS = -DNO_FASTNEW -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_5) $(am__append_6) $(am__append_7) \
	-I$(top_srcdir)/src/atomic_ops $(am__append_8)
# NO_INLINE_FLAGS =  -fno-inline
NO_INLINE_FLAGS = 
#  CC turns on inlining based on optimization level.  at O0 it should
#  do no inlining at less than O3.  There is no way to force inlining to
#  be off (well, +d does except when the optimization level overrides it); 
#  but you can force it to be on.
#NO_INLINE_FLAGS = +d
YES_INLINE_FLAGS = -finline-functions
#YES_INLINE_FLAGS = 
AM_CCASFLAGS = -I$(top_srcdir)/config -I$(top_srcdir)/src/atomic_ops \
	$(am__append_4) $(TARGET_FLAGS)
# GCC/32
#TARGET_FLAGS = -m32 -UARCH_LP64
# TUNE_FLAGS = -mtune=generic
TARGET_FLAGS = -m64 -DARCH_LP64 

# SUN CC/32
##TARGET_FLAGS = -m32 -UARCH_LP64
#TARGET_FLAGS = -m64 -DARCH_LP64
AM_LDFLAGS = -m64
#AM_LDFLAGS = -m64
#AM_LDFLAGS = -m32
#TUNE_FLAGS = -mtune=generic

#TUNE_FLAGS = -mtune=nocona
TUNE_FLAGS = -march=core2 -mtune=core2
##TUNE_FLAGS = -xtarget=native
#TUNE_FLAGS = -xtarget=native
#PEDANTIC = -pedantic-errors  
PEDANTIC = 
LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)
# CXX flags that go on the compiles for pure products
PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)
GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13)
AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \
	$(OPTFLAGS) $(PURE_CXXFLAGS) $(ALWAYS_FLAGS) $(TEMPLATEFLAGS) \
	-I$(top_srcdir)/src/fc -I$(top_srcdir)/src/sthread \
	-I$(top_srcdir)/src/common
AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)
ALLCLEANFILES = $(DISTCLEANFILES) \
	       	$(MOSTLYCLEANFILES) \
	       	$(MAINTAINERCLEANFILES) \
	       	$(CLEANFILES) 

W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated 
GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG 
GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG 

#----------------- GCC  -----------------------------------
# -fstack-check removed because sthread does its own, and sthread/tests/
# thread1 test won't build with this turned on: -fstack-check
SYMBOLSFLAGS = -ggdb

# --------------------------------------------------------
#
# handle --enable-debug config option
#
# --------------------------------------------------------
#----------------- SUN CC -----------------------------------
# SYMBOLSFLAGS = -g -xs -xinstrument=datarace -DTHA_RACE
#SYMBOLSFLAGS = -g -xs 
NOSYMBOLSFLAGS = 
# -g0 turns off inlining
#NOSYMBOLSFLAGS = -g0 
NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) 
#NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS)
MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
#MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)
#FULLOPTFLAGS = -xO4
DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
	$(am__append_14) \
	$(am__append_15)
#DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
#	$(am__append_14) \
#	$(am__append_15)
#DEBUGFLAGS =  \
#	$(GENERIC_NODEBUG_FLAGS) \
#	$(am__append_14) \
#	$(am__append_15)
#DEBUGFLAGS = $(GENERIC_YESDEBUG_FLAGS) \
#	$(am__append_14) $(am__append_15)
OPTFLAGS = $(FULLOPTFLAGS)
#OPTFLAGS = $(MIDOPTFLAGS)
#OPTFLAGS = $(NOOPTFLAGS)
#OPTFLAGS = $(NOOPTFLAGS)
#OPTFLAGS = $(NOOPTFLAGS)
TEMPLATEFLAGS = 

# --------------------------------------------------------
#
# handle --enable-explicit config option
#
# --------------------------------------------------------
#TEMPLATEFLAGS = -fno-implicit-templates -DEXPLICIT_TEMPLATE

# --------------------------------------------------------

# Initialize LOCALLDADD 
# Note: on solaris -lnsl may be needed for gethostbyname()
LOCALLDADD = $(top_srcdir)/src/atomic_ops/libatomic_ops.a -lnsl \
	$(am__append_16) $(am__append_19) $(am__append_22)

# --------------------------------------------------------
#
# handle --enable-purify config option
#
# --------------------------------------------------------

# PURIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURIFY_LIBS = $(PURE_DIR)/lib/libpurify_stubs.a
# PURIFY_BIN = $(PURE_DIR)/bin
# PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0
#PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0.0.0-014
# yes, libs are in the same place as is the header file
#PURIFY_LIBS = $(PURIFY_INCLUDE)/lib64/libpurify_stubs.a
#PURIFY_BIN = $(PURE_DIR)/bin
#PURIFY_FLAGS = -g++=yes -cache-dir=$(PURE_CACHE_DIR) -threads=yes -pointer-mask-64=0xfffffffffffffffe
#SUFFIXES = .purecov
#SUFFIXES = .pure
#SUFFIXES = .quant

# --------------------------------------------------------
#
# handle --enable-quantify config option
#
# --------------------------------------------------------

# QUANTIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# QUANTIFY_LIBS = 
# QUANTIFY_BIN = $(PURE_DIR)/bin
#QUANTIFY_INCLUDE = $(PURE_DIR)/releases/quantify.i386_linux2.7.0
# yes, libs are in the same place as is the header file
#QUANTIFY_LIBS = $(QUANTIFY_INCLUDE)/libquantify_stubs.a
#QUANTIFY_BIN = $(PURE_DIR)/bin
#QUANTIFY_FLAGS = -g++=yes \
#	     -copy-fd-output-to-logfile=1,2 \
#	     -ignore-signals=SIGUSR1 \
#	     -threads -thread-stack-change=0x3000 -max_threads=64 \
#	     -cache-dir=$(PURE_CACHE_DIR)

GROFF_OPTIONS = -s -m man -U

# --------------------------------------------------------
#
# handle --enable-purecov config option
#
# --------------------------------------------------------

# PURECOV_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURECOV_LIBS = $(PURE_DIR)/lib/libpurecov_stubs.a
# PURECOV_BIN = $(PURE_DIR)/bin
#PURECOV_INCLUDE = $(PURE_DIR)/releases/purecov.i386_linux2.7.0
# yes, libs are in the same place as is the header file
#PURECOV_LIBS = $(PURECOV_INCLUDE)/libpurecov_stubs.a
#PURECOV_BIN = $(PURE_DIR)/bin
#PURECOV_FLAGS = -g++=yes -chain-length=10  -inuse-at-exit \
#	     -first-only -leaks-at-exit -copy-fd-output-to-logfile=1,2 \
#	     -ignore-signals=SIGUSR1 -pointer-mask=0xfffffffe \
#	     -threads -thread-stack-change=0x3000 -max_threads=64 \
#	     -cache-dir=$(PURE_CACHE_DIR)

EXTRA_DIST = e_error.dat\
	 sm_stats.dat logdef.dat \
	 bf_htab_stats.dat

lib_LIBRARIES = libsm.a
E_ERROR_GENFILES_H = \
	e_errmsg_gen.h \
	e_einfo_gen.h \
	e_error_def_gen.h \
	e_error_enum_gen.h \
	e_einfo_bakw_gen.h

SM_STATS_GENFILES_H = \
	sm_stats_t_collect_enum_gen.h \
	sm_stats_t_msg_gen.h \
	sm_stats_t_struct_gen.h 

SM_STATS_GENFILES_CPP = \
	sm_stats_t_collect_gen.cpp \
	sm_stats_t_dec_gen.cpp \
	sm_stats_t_inc_gen.cpp \
	sm_stats_t_out_gen.cpp 

BF_HTAB_STATS_GENFILES_H = \
	bf_htab_stats_t_collect_enum_gen.h \
	bf_htab_stats_t_msg_gen.h \
	bf_htab_stats_t_struct_gen.h 

BF_HTAB_STATS_GENFILES_CPP = \
	bf_htab_stats_t_collect_gen.cpp \
	bf_htab_stats_t_dec_gen.cpp \
	bf_htab_stats_t_inc_gen.cpp \
	bf_htab_stats_t_out_gen.cpp

LOGDEF_GENFILES_H = \
	logfunc_gen.h \
	logtype_gen.h

LOGDEF_GENFILES_CPP = \
	undo_gen.cpp \
	redo_gen.cpp \
	logdef_gen.cpp \
	logstr_gen.cpp \
	logstub_gen.cpp

GENFILES_CPP = $(SM_STATS_GENFILES_CPP) \
	       $(BF_HTAB_STATS_GENFILES_CPP) \
	       $(LOGDEF_GENFILES_CPP)

GENFILES_H = $(E_ERROR_GENFILES_H) \
	   $(SM_STATS_GENFILES_H) \
	   $(BF_HTAB_STATS_GENFILES_H) \
	   $(LOGDEF_GENFILES_H)

GENFILES = $(GENFILES_H) $(GENFILES_CPP)
include_HEADERS = \
	$(GENFILES_H) \
	app_support.h \
	bf.h bf_core.h  bf_htab.h bf_transit_bucket.h\
	bf_prefetch.h bf_s.h \
	btcursor.h btree.h btree_impl.h btree_p.h \
	btree_latch_manager.h \
	chkpt.h chkpt_serial.h \
	crash.h \
        data_access_histogram.h \
	device.h dir.h \
	extent.h \
	file.h file_s.h \
	histo.h keyed.h lexify.h \
	lgrec.h lid.h \
	lock.h lock_cache.h lock_core.h lock_s.h lock_s_inline.h lock_x.h \
	log.h log_core.h partition.h logrec.h \
	key_ranges_map.h \
	page.h page_alias.h page_h.h page_s.h \
	pin.h \
	pmap.h \
	prologue.h \
	ranges_p.h \
	restart.h restart_s.h \
	rtree.h rtree_p.h \
	scan.h sdesc.h \
	sm.h sm_base.h sm_du_stats.h sm_escalation.h \
	sm_int_0.h sm_int_1.h sm_int_2.h sm_int_3.h sm_int_4.h \
	sm_io.h sm_s.h \
	sm_vtable_enum.h \
	smstats.h \
	smthread.h \
	sort.h sort_s.h \
	sysdefs.h \
	vol.h \
	xct.h xct_dependent.h \
	zkeyed.h 

libsm_a_SOURCES = \
	bf.cpp bf_core.cpp \
	bf_htab.cpp bf_htab_test.cpp \
	bf_prefetch.cpp \
	btcursor.cpp btree.cpp btree_bl.cpp btree_impl.cpp btree_p.cpp \
	btree_latch_manager.cpp \
	chkpt.cpp chkpt_serial.cpp \
	common_templates.cpp \
	crash.cpp \
	data_access_histogram.cpp device.cpp \
	dir.cpp \
	file.cpp \
	histo.cpp \
	key_ranges_map.cpp keyed.cpp zkeyed.cpp \
	ranges_p.cpp \
	lexify.cpp \
	lgrec.cpp \
	lid.cpp \
	lock.cpp lock_core.cpp \
	log.cpp logrec.cpp logstub.cpp \
	partition.cpp log_core.cpp \
	sort.cpp newsort.cpp \
	page.cpp \
	pin.cpp \
	pmap.cpp \
	restart.cpp \
	rtree.cpp \
	scan.cpp \
	sm.cpp sm-no-inline.cpp \
	sm_du_stats.cpp \
	sm_io.cpp \
	sm_s.cpp \
	smfile.cpp smindex.cpp \
	smstats.cpp \
	smthread.cpp \
	vol.cpp \
	xct.cpp \
	vtable_sm.cpp \
	vtable_smthread.cpp \
	vtable_xct.cpp

MOSTLYCLEANFILES = $(GENFILES) e_error.timestamp logdef.timestamp \
	sm_stats.timestamp

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .purecov .pure .quant .$(OBJEXT) .common .cpp .dvi .fc .html .o .obj .pdf .ps .ssm .sthread .tex
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/sm/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/sm/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libsm.a: $(libsm_a_OBJECTS) $(libsm_a_DEPENDENCIES) $(EXTRA_libsm_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libsm.a
	$(AM_V_AR)$(libsm_a_AR) libsm.a $(libsm_a_OBJECTS) $(libsm_a_LIBADD)
	$(AM_V_at)$(RANLIB) libsm.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bf.Po # am--include-marker
include ./$(DEPDIR)/bf_core.Po # am--include-marker
include ./$(DEPDIR)/bf_htab.Po # am--include-marker
include ./$(DEPDIR)/bf_htab_test.Po # am--include-marker
include ./$(DEPDIR)/bf_prefetch.Po # am--include-marker
include ./$(DEPDIR)/btcursor.Po # am--include-marker
include ./$(DEPDIR)/btree.Po # am--include-marker
include ./$(DEPDIR)/btree_bl.Po # am--include-marker
include ./$(DEPDIR)/btree_impl.Po # am--include-marker
include ./$(DEPDIR)/btree_latch_manager.Po # am--include-marker
include ./$(DEPDIR)/btree_p.Po # am--include-marker
include ./$(DEPDIR)/chkpt.Po # am--include-marker
include ./$(DEPDIR)/chkpt_serial.Po # am--include-marker
include ./$(DEPDIR)/common_templates.Po # am--include-marker
include ./$(DEPDIR)/crash.Po # am--include-marker
include ./$(DEPDIR)/data_access_histogram.Po # am--include-marker
include ./$(DEPDIR)/device.Po # am--include-marker
include ./$(DEPDIR)/dir.Po # am--include-marker
include ./$(DEPDIR)/file.Po # am--include-marker
include ./$(DEPDIR)/histo.Po # am--include-marker
include ./$(DEPDIR)/key_ranges_map.Po # am--include-marker
include ./$(DEPDIR)/keyed.Po # am--include-marker
include ./$(DEPDIR)/lexify.Po # am--include-marker
include ./$(DEPDIR)/lgrec.Po # am--include-marker
include ./$(DEPDIR)/lid.Po # am--include-marker
include ./$(DEPDIR)/lock.Po # am--include-marker
include ./$(DEPDIR)/lock_core.Po # am--include-marker
include ./$(DEPDIR)/log.Po # am--include-marker
include ./$(DEPDIR)/log_core.Po # am--include-marker
include ./$(DEPDIR)/logrec.Po # am--include-marker
include ./$(DEPDIR)/logstub.Po # am--include-marker
include ./$(DEPDIR)/newsort.Po # am--include-marker
include ./$(DEPDIR)/page.Po # am--include-marker
include ./$(DEPDIR)/partition.Po # am--include-marker
include ./$(DEPDIR)/pin.Po # am--include-marker
include ./$(DEPDIR)/pmap.Po # am--include-marker
include ./$(DEPDIR)/ranges_p.Po # am--include-marker
include ./$(DEPDIR)/restart.Po # am--include-marker
include ./$(DEPDIR)/rtree.Po # am--include-marker
include ./$(DEPDIR)/scan.Po # am--include-marker
include ./$(DEPDIR)/sm-no-inline.Po # am--include-marker
include ./$(DEPDIR)/sm.Po # am--include-marker
include ./$(DEPDIR)/sm_du_stats.Po # am--include-marker
include ./$(DEPDIR)/sm_io.Po # am--include-marker
include ./$(DEPDIR)/sm_s.Po # am--include-marker
include ./$(DEPDIR)/smfile.Po # am--include-marker
include ./$(DEPDIR)/smindex.Po # am--include-marker
include ./$(DEPDIR)/smstats.Po # am--include-marker
include ./$(DEPDIR)/smthread.Po # am--include-marker
include ./$(DEPDIR)/sort.Po # am--include-marker
include ./$(DEPDIR)/vol.Po # am--include-marker
include ./$(DEPDIR)/vtable_sm.Po # am--include-marker
include ./$(DEPDIR)/vtable_smthread.Po # am--include-marker
include ./$(DEPDIR)/vtable_xct.Po # am--include-marker
include ./$(DEPDIR)/xct.Po # am--include-marker
include ./$(DEPDIR)/zkeyed.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-local mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/bf.Po
	-rm -f ./$(DEPDIR)/bf_core.Po
	-rm -f ./$(DEPDIR)/bf_htab.Po
	-rm -f ./$(DEPDIR)/bf_htab_test.Po
	-rm -f ./$(DEPDIR)/bf_prefetch.Po
	-rm -f ./$(DEPDIR)/btcursor.Po
	-rm -f ./$(DEPDIR)/btree.Po
	-rm -f ./$(DEPDIR)/btree_bl.Po
	-rm -f ./$(DEPDIR)/btree_impl.Po
	-rm -f ./$(DEPDIR)/btree_latch_manager.Po
	-rm -f ./$(DEPDIR)/btree_p.Po
	-rm -f ./$(DEPDIR)/chkpt.Po
	-rm -f ./$(DEPDIR)/chkpt_serial.Po
	-rm -f ./$(DEPDIR)/common_templates.Po
	-rm -f ./$(DEPDIR)/crash.Po
	-rm -f ./$(DEPDIR)/data_access_histogram.Po
	-rm -f ./$(DEPDIR)/device.Po
	-rm -f ./$(DEPDIR)/dir.Po
	-rm -f ./$(DEPDIR)/file.Po
	-rm -f ./$(DEPDIR)/histo.Po
	-rm -f ./$(DEPDIR)/key_ranges_map.Po
	-rm -f ./$(DEPDIR)/keyed.Po
	-rm -f ./$(DEPDIR)/lexify.Po
	-rm -f ./$(DEPDIR)/lgrec.Po
	-rm -f ./$(DEPDIR)/lid.Po
	-rm -f ./$(DEPDIR)/lock.Po
	-rm -f ./$(DEPDIR)/lock_core.Po
	-rm -f ./$(DEPDIR)/log.Po
	-rm -f ./$(DEPDIR)/log_core.Po
	-rm -f ./$(DEPDIR)/logrec.Po
	-rm -f ./$(DEPDIR)/logstub.Po
	-rm -f ./$(DEPDIR)/newsort.Po
	-rm -f ./$(DEPDIR)/page.Po
	-rm -f ./$(DEPDIR)/partition.Po
	-rm -f ./$(DEPDIR)/pin.Po
	-rm -f ./$(DEPDIR)/pmap.Po
	-rm -f ./$(DEPDIR)/ranges_p.Po
	-rm -f ./$(DEPDIR)/restart.Po
	-rm -f ./$(DEPDIR)/rtree.Po
	-rm -f ./$(DEPDIR)/scan.Po
	-rm -f ./$(DEPDIR)/sm-no-inline.Po
	-rm -f ./$(DEPDIR)/sm.Po
	-rm -f ./$(DEPDIR)/sm_du_stats.Po
	-rm -f ./$(DEPDIR)/sm_io.Po
	-rm -f ./$(DEPDIR)/sm_s.Po
	-rm -f ./$(DEPDIR)/smfile.Po
	-rm -f ./$(DEPDIR)/smindex.Po
	-rm -f ./$(DEPDIR)/smstats.Po
	-rm -f ./$(DEPDIR)/smthread.Po
	-rm -f ./$(DEPDIR)/sort.Po
	-rm -f ./$(DEPDIR)/vol.Po
	-rm -f ./$(DEPDIR)/vtable_sm.Po
	-rm -f ./$(DEPDIR)/vtable_smthread.Po
	-rm -f ./$(DEPDIR)/vtable_xct.Po
	-rm -f ./$(DEPDIR)/xct.Po
	-rm -f ./$(DEPDIR)/zkeyed.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/bf.Po
	-rm -f ./$(DEPDIR)/bf_core.Po
	-rm -f ./$(DEPDIR)/bf_htab.Po
	-rm -f ./$(DEPDIR)/bf_htab_test.Po
	-rm -f ./$(DEPDIR)/bf_prefetch.Po
	-rm -f ./$(DEPDIR)/btcursor.Po
	-rm -f ./$(DEPDIR)/btree.Po
	-rm -f ./$(DEPDIR)/btree_bl.Po
	-rm -f ./$(DEPDIR)/btree_impl.Po
	-rm -f ./$(DEPDIR)/btree_latch_manager.Po
	-rm -f ./$(DEPDIR)/btree_p.Po
	-rm -f ./$(DEPDIR)/chkpt.Po
	-rm -f ./$(DEPDIR)/chkpt_serial.Po
	-rm -f ./$(DEPDIR)/common_templates.Po
	-rm -f ./$(DEPDIR)/crash.Po
	-rm -f ./$(DEPDIR)/data_access_histogram.Po
	-rm -f ./$(DEPDIR)/device.Po
	-rm -f ./$(DEPDIR)/dir.Po
	-rm -f ./$(DEPDIR)/file.Po
	-rm -f ./$(DEPDIR)/histo.Po
	-rm -f ./$(DEPDIR)/key_ranges_map.Po
	-rm -f ./$(DEPDIR)/keyed.Po
	-rm -f ./$(DEPDIR)/lexify.Po
	-rm -f ./$(DEPDIR)/lgrec.Po
	-rm -f ./$(DEPDIR)/lid.Po
	-rm -f ./$(DEPDIR)/lock.Po
	-rm -f ./$(DEPDIR)/lock_core.Po
	-rm -f ./$(DEPDIR)/log.Po
	-rm -f ./$(DEPDIR)/log_core.Po
	-rm -f ./$(DEPDIR)/logrec.Po
	-rm -f ./$(DEPDIR)/logstub.Po
	-rm -f ./$(DEPDIR)/newsort.Po
	-rm -f ./$(DEPDIR)/page.Po
	-rm -f ./$(DEPDIR)/partition.Po
	-rm -f ./$(DEPDIR)/pin.Po
	-rm -f ./$(DEPDIR)/pmap.Po
	-rm -f ./$(DEPDIR)/ranges_p.Po
	-rm -f ./$(DEPDIR)/restart.Po
	-rm -f ./$(DEPDIR)/rtree.Po
	-rm -f ./$(DEPDIR)/scan.Po
	-rm -f ./$(DEPDIR)/sm-no-inline.Po
	-rm -f ./$(DEPDIR)/sm.Po
	-rm -f ./$(DEPDIR)/sm_du_stats.Po
	-rm -f ./$(DEPDIR)/sm_io.Po
	-rm -f ./$(DEPDIR)/sm_s.Po
	-rm -f ./$(DEPDIR)/smfile.Po
	-rm -f ./$(DEPDIR)/smindex.Po
	-rm -f ./$(DEPDIR)/smstats.Po
	-rm -f ./$(DEPDIR)/smthread.Po
	-rm -f ./$(DEPDIR)/sort.Po
	-rm -f ./$(DEPDIR)/vol.Po
	-rm -f ./$(DEPDIR)/vtable_sm.Po
	-rm -f ./$(DEPDIR)/vtable_smthread.Po
	-rm -f ./$(DEPDIR)/vtable_xct.Po
	-rm -f ./$(DEPDIR)/xct.Po
	-rm -f ./$(DEPDIR)/zkeyed.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am: pdf-local

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLIBRARIES

.MAKE: $(am__recursive_targets) all check install install-am \
	install-exec install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-generic \
	clean-libLIBRARIES clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am pdf-local \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-libLIBRARIES

.PRECIOUS: Makefile


# --------------------------------------------------------
#
# add target to create .cvsignore file
#
# --------------------------------------------------------
.cvsignore:  Makefile 
	touch $@
	$(RM) $@
	echo $(ALLCLEANFILES) >& $@

# --------------------------------------------------------
#
# add target to get rid of additional built objects,
#    in particular this is for the PURE targets
#
# --------------------------------------------------------
clean-local: 
	$(RM) $(LOCALCLEAN) 
#.$(OBJEXT).pure:  
#	$(PURIFY_BIN)/purify $(PURIFY_FLAGS)  $(PURIFY_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)
#.$(OBJEXT).quant:  
#	$(QUANTIFY_BIN)/quantify $(QUANTIFY_FLAGS) $(QUANTIFY_COLLECTOR)  $(CXX) -o $@ $< $(LDADD) $(LIBS)

SUFFIXES: .tex .fc .common .sthread .ssm .html .ps .dvi .pdf 

.fc.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.common.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.sthread.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.ssm.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.fc.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.common.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.sthread.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.ssm.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.fc.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.common.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.sthread.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.ssm.dvi:
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.dvi.pdf:
	dvipdfm $<

.tex.dvi:
	latex $<
# second time to get the x-refs
	latex $<

# html-local: $(HTML_TARGETS)

pdf-local: $(PDF_TARGETS)
#.$(OBJEXT).purecov:  
#	$(PURECOV_BIN)/purecov $(PURECOV_FLAGS)  $(PURECOV_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)

bf.$(OBJEXT): $(E_ERROR_GENFILES_H)
$(E_ERROR_GENFILES_H): e_error.dat
	$(PERL) $(top_srcdir)/tools/errors.pl --d --e $?

bf.$(OBJEXT): $(BF_HTAB_STATS_GENFILES_H)
sm.$(OBJEXT): $(BF_HTAB_STATS_GENFILES_CPP)
$(BF_HTAB_STATS_GENFILES_CPP) $(BF_HTAB_STATS_GENFILES_H): bf_htab_stats.dat
	$(PERL) $(top_srcdir)/tools/stats.pl $?

bf.$(OBJEXT): $(SM_STATS_GENFILES_H)
sm.$(OBJEXT): $(SM_STATS_GENFILES_CPP)
$(SM_STATS_GENFILES_CPP) $(SM_STATS_GENFILES_H): sm_stats.dat
	$(PERL) $(top_srcdir)/tools/stats.pl $?

chkpt.$(OBJEXT): $(LOGDEF_GENFILES_CPP)
$(LOGDEF_GENFILES_H) $(LOGDEF_GENFILES_CPP): logdef.dat
	$(PERL) -w $(top_srcdir)/tools/logdef.pl $?

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
