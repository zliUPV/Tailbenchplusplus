# Makefile.in generated by automake 1.16.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# if tcl.h is not in your /usr/include, put its path here.
# I haven't found a way to locate it with autoconf yet.
#
# deathstar:
# Built-from-sources, with symbols:
# note: not on chianti:
# TCL_INCLUDE = /scratch/s/tcl/include
# TCL_LIB = -L/scratch/s/tcl/lib -ltcl8.5
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@COMPILER_IS_SUNCC_TRUE@am__append_1 = -features=extensions,zla \
@COMPILER_IS_SUNCC_TRUE@	-xdebugformat=stabs -DSOLARIS2 \
@COMPILER_IS_SUNCC_TRUE@	-library=stlport4 -mt -lpthread
# -pedantic requires -Wno-long-long
# TODO: fix this comment
# Let's avoid use of long long if possible, and require
# explicit C++ types based on data model of compiler.  There
# might be some cases where the underlying library function
# or system include file uses long long, in which case we will have to.
#
#
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_SUNCC_FALSE@am__append_2 = -Wextra -Wall -Wno-long-long -pthread
@COMPILER_IS_GCC_FALSE@@COMPILER_IS_SUNCC_FALSE@am__append_3 = UNKNOWN COMPILER
@COMPILER_IS_GCC_TRUE@am__append_4 = -D__GNUC_AS__ -D_ASM
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@am__append_5 = $(TARGET_FLAGS)
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@am__append_6 = $(TARGET_FLAGS) 
@ENABLE_ARCH_LP64_FALSE@am__append_7 = $(TARGET_FLAGS) -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 
@USE_IOS_COMPAT_TRUE@am__append_8 = -I$(top_srcdir)/src/compat

# --------------------------------------------------------
#
# Determine which gcc warnings to use, based on which 
# compiler version we are using.
#
# -Wno-deprecated # TODO:remove
#
# Note: gcc seems to issue a false positive warning about strict aliasing
# in the new override code, so we have to add -fno-strict-aliasing.
# --------------------------------------------------------
@COMPILER_IS_GCC_TRUE@am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings

# /* In adition to the 3.2 warnings, prototype errors for c/objc only */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_TRUE@am__append_10 = 
# /* GCC 3.2 doesn't like -Wmissing-declarations and -Wnested-externs */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_TRUE@am__append_11 = -Wstrict-prototypes -Wmissing-prototypes 
# /* Need this to stop warnings of normal (old) standard c++ facilities use. */
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@am__append_12 = -Wstrict-prototypes \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wmissing-prototypes \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wmissing-declarations \
@COMPILER_IS_GCC_TRUE@@GCC_VER_34_WARNINGS_FALSE@@GCC_VER_3_WARNINGS_FALSE@	-Wnested-externs
@COMPILER_IS_GCC_TRUE@am__append_13 = -Woverloaded-virtual 
@DEBUGGERSYMBOLS_TRUE@am__append_14 = $(SYMBOLSFLAGS)
@DEBUGGERSYMBOLS_FALSE@am__append_15 = $(NOSYMBOLSFLAGS)
# PURIFY_COLLECTOR = -collector=/usr/bin/ld
@PURIFY_TRUE@am__append_16 = $(PURIFY_LIBS)
@PURIFY_TRUE@am__append_17 = $(check_PROGRAMS:%=%.pure)
@PURIFY_TRUE@am__append_18 = -DPURIFY -DPURIFY_ZERO -I$(PURIFY_INCLUDE) 
# QUANTIFY_COLLECTOR = -collector=/usr/bin/ld
@QUANTIFY_TRUE@am__append_19 = $(QUANTIFY_LIBS)
@QUANTIFY_TRUE@am__append_20 = $(check_PROGRAMS:%=%.quant)
@QUANTIFY_TRUE@am__append_21 = -DQUANTIFY -I$(QUANTIFY_INCLUDE) 
# PURECOV_COLLECTOR = -collector=/usr/bin/ld
@PURECOV_TRUE@am__append_22 = $(PURECOV_LIBS)
@PURECOV_TRUE@am__append_23 = $(check_PROGRAMS:%=%.purecov)
@PURECOV_TRUE@am__append_24 = -DPURECOV -I$(PURECOV_INCLUDE) 
subdir = src/fc/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config/shore-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_basic_sizes_OBJECTS = basic_sizes.$(OBJEXT)
basic_sizes_OBJECTS = $(am_basic_sizes_OBJECTS)
basic_sizes_LDADD = $(LDADD)
am__DEPENDENCIES_1 = $(top_srcdir)/src/atomic_ops/libatomic_ops.a \
	$(am__append_16) $(am__append_19) $(am__append_22)
basic_sizes_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_bitvector_OBJECTS = bitvector.$(OBJEXT)
bitvector_OBJECTS = $(am_bitvector_OBJECTS)
bitvector_LDADD = $(LDADD)
bitvector_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_box_OBJECTS = box.$(OBJEXT)
box_OBJECTS = $(am_box_OBJECTS)
box_LDADD = $(LDADD)
box_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_container_OBJECTS = container.$(OBJEXT)
container_OBJECTS = $(am_container_OBJECTS)
container_LDADD = $(LDADD)
container_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_cuckoo_OBJECTS = cuckoo.$(OBJEXT)
cuckoo_OBJECTS = $(am_cuckoo_OBJECTS)
cuckoo_LDADD = $(LDADD)
cuckoo_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_darray_OBJECTS = darray.$(OBJEXT)
darray_OBJECTS = $(am_darray_OBJECTS)
darray_LDADD = $(LDADD)
darray_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_errlogtest_OBJECTS = errlogtest.$(OBJEXT)
errlogtest_OBJECTS = $(am_errlogtest_OBJECTS)
errlogtest_LDADD = $(LDADD)
errlogtest_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_findprime_OBJECTS = findprime.$(OBJEXT)
findprime_OBJECTS = $(am_findprime_OBJECTS)
findprime_LDADD = $(LDADD)
findprime_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_findsizes_OBJECTS = findsizes.$(OBJEXT)
findsizes_OBJECTS = $(am_findsizes_OBJECTS)
findsizes_LDADD = $(LDADD)
findsizes_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_hash1_OBJECTS = hash1.$(OBJEXT)
hash1_OBJECTS = $(am_hash1_OBJECTS)
hash1_LDADD = $(LDADD)
hash1_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_hash2_OBJECTS = hash2.$(OBJEXT)
hash2_OBJECTS = $(am_hash2_OBJECTS)
hash2_LDADD = $(LDADD)
hash2_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_heap_OBJECTS = heap.$(OBJEXT)
heap_OBJECTS = $(am_heap_OBJECTS)
heap_LDADD = $(LDADD)
heap_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_io_OBJECTS = io.$(OBJEXT)
io_OBJECTS = $(am_io_OBJECTS)
io_LDADD = $(LDADD)
io_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_list1_OBJECTS = list1.$(OBJEXT)
list1_OBJECTS = $(am_list1_OBJECTS)
list1_LDADD = $(LDADD)
list1_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_list2_OBJECTS = list2.$(OBJEXT)
list2_OBJECTS = $(am_list2_OBJECTS)
list2_LDADD = $(LDADD)
list2_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_list3_OBJECTS = list3.$(OBJEXT)
list3_OBJECTS = $(am_list3_OBJECTS)
list3_LDADD = $(LDADD)
list3_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_memblock_OBJECTS = memblock.$(OBJEXT)
memblock_OBJECTS = $(am_memblock_OBJECTS)
memblock_LDADD = $(LDADD)
memblock_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_ntime_OBJECTS = ntime.$(OBJEXT)
ntime_OBJECTS = $(am_ntime_OBJECTS)
ntime_LDADD = $(LDADD)
ntime_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_rand_OBJECTS = rand.$(OBJEXT)
rand_OBJECTS = $(am_rand_OBJECTS)
rand_LDADD = $(LDADD)
rand_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_random_OBJECTS = random.$(OBJEXT)
random_OBJECTS = $(am_random_OBJECTS)
random_LDADD = $(LDADD)
random_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_rc_OBJECTS = rc.$(OBJEXT)
rc_OBJECTS = $(am_rc_OBJECTS)
rc_LDADD = $(LDADD)
rc_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_ss_OBJECTS = ss.$(OBJEXT)
ss_OBJECTS = $(am_ss_OBJECTS)
ss_LDADD = $(LDADD)
ss_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_stats_OBJECTS = stats.$(OBJEXT)
stats_OBJECTS = $(am_stats_OBJECTS)
stats_LDADD = $(LDADD)
stats_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
am_stats2_OBJECTS = test_stat.$(OBJEXT) stats2.$(OBJEXT)
stats2_OBJECTS = $(am_stats2_OBJECTS)
stats2_LDADD = $(LDADD)
stats2_DEPENDENCIES = ../libfc.a $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/config
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/basic_sizes.Po \
	./$(DEPDIR)/bitvector.Po ./$(DEPDIR)/box.Po \
	./$(DEPDIR)/container.Po ./$(DEPDIR)/cuckoo.Po \
	./$(DEPDIR)/darray.Po ./$(DEPDIR)/errlogtest.Po \
	./$(DEPDIR)/findprime.Po ./$(DEPDIR)/findsizes.Po \
	./$(DEPDIR)/hash1.Po ./$(DEPDIR)/hash2.Po ./$(DEPDIR)/heap.Po \
	./$(DEPDIR)/io.Po ./$(DEPDIR)/list1.Po ./$(DEPDIR)/list2.Po \
	./$(DEPDIR)/list3.Po ./$(DEPDIR)/memblock.Po \
	./$(DEPDIR)/ntime.Po ./$(DEPDIR)/rand.Po ./$(DEPDIR)/random.Po \
	./$(DEPDIR)/rc.Po ./$(DEPDIR)/ss.Po ./$(DEPDIR)/stats.Po \
	./$(DEPDIR)/stats2.Po ./$(DEPDIR)/test_stat.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(basic_sizes_SOURCES) $(bitvector_SOURCES) $(box_SOURCES) \
	$(container_SOURCES) $(cuckoo_SOURCES) $(darray_SOURCES) \
	$(errlogtest_SOURCES) $(findprime_SOURCES) \
	$(findsizes_SOURCES) $(hash1_SOURCES) $(hash2_SOURCES) \
	$(heap_SOURCES) $(io_SOURCES) $(list1_SOURCES) \
	$(list2_SOURCES) $(list3_SOURCES) $(memblock_SOURCES) \
	$(ntime_SOURCES) $(rand_SOURCES) $(random_SOURCES) \
	$(rc_SOURCES) $(ss_SOURCES) $(stats_SOURCES) $(stats2_SOURCES)
DIST_SOURCES = $(basic_sizes_SOURCES) $(bitvector_SOURCES) \
	$(box_SOURCES) $(container_SOURCES) $(cuckoo_SOURCES) \
	$(darray_SOURCES) $(errlogtest_SOURCES) $(findprime_SOURCES) \
	$(findsizes_SOURCES) $(hash1_SOURCES) $(hash2_SOURCES) \
	$(heap_SOURCES) $(io_SOURCES) $(list1_SOURCES) \
	$(list2_SOURCES) $(list3_SOURCES) $(memblock_SOURCES) \
	$(ntime_SOURCES) $(rand_SOURCES) $(random_SOURCES) \
	$(rc_SOURCES) $(ss_SOURCES) $(stats_SOURCES) $(stats2_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.generic \
	$(top_srcdir)/Makefile.local $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = 
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CSCOPE = @CSCOPE@
CTAGS = @CTAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
# This clearing of CXXFLAGS is necessary to override the
# annoying -g -O2 that autoconf stuffs in there, and which
# I cannot find any other way to control.
CXXFLAGS = 
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DTRACE = @DTRACE@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETAGS = @ETAGS@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
RMM = @RMM@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
uname_machine = @uname_machine@

# -*- mode:Makefile -*-
# rules, macros generic to all Makefile.am
AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha

# dewitt-gw, chianti, deathstar
# ActiveTcl no-symbols installed:
TCL_INCLUDE = /scratch/nhall/tcl/include
TCL_LIB = -L/scratch/nhall/tcl/lib -ltcl8.5

# d-12, dewitt-gw:
# ActiveTcl no-symbols installed:
# TCL_INCLUDE = /u/n/h/nhall/tcl/include
# TCL_LIB = -L/u/n/h/nhall/tcl/lib -ltcl8.5

# PURE_DIR = /s/purifyplus-7.0/@sys/
# PURE_DIR = /s/purifyplus/@sys/
PURE_DIR = /s/purifyplus/amd64_rhel5
# PURE_CACHE_DIR = /scratch/nhall/pure
# d-12:
PURE_CACHE_DIR = /tmp/nhall/pure

# --------------------------------------------------------
#
# Local non-standard paths to things are in Makefile.local
#
# --------------------------------------------------------
DISTCLEANFILES = Makefile $(GENFILES)
BUILT_SOURCES = $(GENFILES)
# installdir = $(top_srcdir)/installdir
# docdir = $(installdir)/doc

# --------------------------------------------------------
#
# Initialize  
#
# --------------------------------------------------------

# that the posix-compliant clib interfaces are there (e.g., ctime_r)
# (Actually, you're supposed to get them both with _POSIX_C_SOURCE > 199506L
# but I'm not that trusting.)
ALWAYS_FLAGS = -DNO_FASTNEW -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_5) $(am__append_6) $(am__append_7) \
	-I$(top_srcdir)/src/atomic_ops $(am__append_8)
# NO_INLINE_FLAGS =  -fno-inline
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_SUNCC_FALSE@NO_INLINE_FLAGS = 
#  CC turns on inlining based on optimization level.  at O0 it should
#  do no inlining at less than O3.  There is no way to force inlining to
#  be off (well, +d does except when the optimization level overrides it); 
#  but you can force it to be on.
@COMPILER_IS_SUNCC_TRUE@NO_INLINE_FLAGS = +d
@COMPILER_IS_GCC_TRUE@@COMPILER_IS_SUNCC_FALSE@YES_INLINE_FLAGS = -finline-functions
@COMPILER_IS_SUNCC_TRUE@YES_INLINE_FLAGS = 
AM_CCASFLAGS = -I$(top_srcdir)/config -I$(top_srcdir)/src/atomic_ops \
	$(am__append_4) $(TARGET_FLAGS)
# GCC/32
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_FALSE@TARGET_FLAGS = -m32 -UARCH_LP64
# TUNE_FLAGS = -mtune=generic
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@TARGET_FLAGS = -m64 -DARCH_LP64 

# SUN CC/32
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_FALSE@TARGET_FLAGS = -m32 -UARCH_LP64
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@TARGET_FLAGS = -m64 -DARCH_LP64
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@AM_LDFLAGS = -m64
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@AM_LDFLAGS = -m64
@ENABLE_ARCH_LP64_FALSE@AM_LDFLAGS = -m32
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_FALSE@TUNE_FLAGS = -mtune=generic

#TUNE_FLAGS = -mtune=nocona
@COMPILER_IS_SUNCC_FALSE@@ENABLE_ARCH_LP64_TRUE@TUNE_FLAGS = -march=core2 -mtune=core2
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_FALSE@TUNE_FLAGS = -xtarget=native
@COMPILER_IS_SUNCC_TRUE@@ENABLE_ARCH_LP64_TRUE@TUNE_FLAGS = -xtarget=native
@COMPILER_IS_GCC_TRUE@@NOPEDANTIC_FALSE@PEDANTIC = -pedantic-errors  
@COMPILER_IS_GCC_TRUE@@NOPEDANTIC_TRUE@PEDANTIC = 
LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)
# CXX flags that go on the compiles for pure products
PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)
GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \
	$(am__append_12) $(am__append_13)
AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \
	$(OPTFLAGS) $(PURE_CXXFLAGS) $(ALWAYS_FLAGS) $(TEMPLATEFLAGS) \
	-I$(top_srcdir)/src/fc
AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)
ALLCLEANFILES = $(DISTCLEANFILES) \
	       	$(MOSTLYCLEANFILES) \
	       	$(MAINTAINERCLEANFILES) \
	       	$(CLEANFILES) 

@COMPILER_IS_GCC_TRUE@W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated 
GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG 
GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG 

#----------------- GCC  -----------------------------------
# -fstack-check removed because sthread does its own, and sthread/tests/
# thread1 test won't build with this turned on: -fstack-check
@COMPILER_IS_SUNCC_FALSE@SYMBOLSFLAGS = -ggdb

# --------------------------------------------------------
#
# handle --enable-debug config option
#
# --------------------------------------------------------
#----------------- SUN CC -----------------------------------
# SYMBOLSFLAGS = -g -xs -xinstrument=datarace -DTHA_RACE
@COMPILER_IS_SUNCC_TRUE@SYMBOLSFLAGS = -g -xs 
@COMPILER_IS_SUNCC_FALSE@NOSYMBOLSFLAGS = 
# -g0 turns off inlining
@COMPILER_IS_SUNCC_TRUE@NOSYMBOLSFLAGS = -g0 
@COMPILER_IS_SUNCC_FALSE@NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) 
@COMPILER_IS_SUNCC_TRUE@NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS)
@COMPILER_IS_SUNCC_FALSE@MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_TRUE@MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_FALSE@FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)
@COMPILER_IS_SUNCC_TRUE@FULLOPTFLAGS = -xO4
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_14) \
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_15)
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_14) \
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@	$(am__append_15)
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@DEBUGFLAGS =  \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(GENERIC_NODEBUG_FLAGS) \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(am__append_14) \
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@	$(am__append_15)
@DEBUGLEVEL3_TRUE@DEBUGFLAGS = $(GENERIC_YESDEBUG_FLAGS) \
@DEBUGLEVEL3_TRUE@	$(am__append_14) $(am__append_15)
@DEBUGLEVEL1_FALSE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(FULLOPTFLAGS)
@DEBUGLEVEL1_TRUE@@DEBUGLEVEL2_FALSE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(MIDOPTFLAGS)
@DEBUGLEVEL2_TRUE@@DEBUGLEVEL3_FALSE@OPTFLAGS = $(NOOPTFLAGS)
@DEBUGLEVEL3_TRUE@OPTFLAGS = $(NOOPTFLAGS)
@DISABLE_OPTIMIZATIONS_TRUE@OPTFLAGS = $(NOOPTFLAGS)
@EXPLICIT_TEMPLATE_FALSE@TEMPLATEFLAGS = 

# --------------------------------------------------------
#
# handle --enable-explicit config option
#
# --------------------------------------------------------
@EXPLICIT_TEMPLATE_TRUE@TEMPLATEFLAGS = -fno-implicit-templates -DEXPLICIT_TEMPLATE

# --------------------------------------------------------

# Initialize LOCALLDADD 
# Note: on solaris -lnsl may be needed for gethostbyname()
LOCALLDADD = $(top_srcdir)/src/atomic_ops/libatomic_ops.a -lnsl \
	$(am__append_16) $(am__append_19) $(am__append_22)

# --------------------------------------------------------
#
# handle --enable-purify config option
#
# --------------------------------------------------------

# PURIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURIFY_LIBS = $(PURE_DIR)/lib/libpurify_stubs.a
# PURIFY_BIN = $(PURE_DIR)/bin
# PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0
@PURIFY_TRUE@PURIFY_INCLUDE = $(PURE_DIR)/releases/purify.i386_linux2.7.0.0.0-014
# yes, libs are in the same place as is the header file
@PURIFY_TRUE@PURIFY_LIBS = $(PURIFY_INCLUDE)/lib64/libpurify_stubs.a
@PURIFY_TRUE@PURIFY_BIN = $(PURE_DIR)/bin
@PURIFY_TRUE@PURIFY_FLAGS = -g++=yes -cache-dir=$(PURE_CACHE_DIR) -threads=yes -pointer-mask-64=0xfffffffffffffffe
@PURECOV_TRUE@SUFFIXES = .purecov
@PURIFY_TRUE@SUFFIXES = .pure
@QUANTIFY_TRUE@SUFFIXES = .quant

# --------------------------------------------------------
#
# handle --enable-quantify config option
#
# --------------------------------------------------------

# QUANTIFY_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# QUANTIFY_LIBS = 
# QUANTIFY_BIN = $(PURE_DIR)/bin
@QUANTIFY_TRUE@QUANTIFY_INCLUDE = $(PURE_DIR)/releases/quantify.i386_linux2.7.0
# yes, libs are in the same place as is the header file
@QUANTIFY_TRUE@QUANTIFY_LIBS = $(QUANTIFY_INCLUDE)/libquantify_stubs.a
@QUANTIFY_TRUE@QUANTIFY_BIN = $(PURE_DIR)/bin
@QUANTIFY_TRUE@QUANTIFY_FLAGS = -g++=yes \
@QUANTIFY_TRUE@	     -copy-fd-output-to-logfile=1,2 \
@QUANTIFY_TRUE@	     -ignore-signals=SIGUSR1 \
@QUANTIFY_TRUE@	     -threads -thread-stack-change=0x3000 -max_threads=64 \
@QUANTIFY_TRUE@	     -cache-dir=$(PURE_CACHE_DIR)

GROFF_OPTIONS = -s -m man -U

# --------------------------------------------------------
#
# handle --enable-purecov config option
#
# --------------------------------------------------------

# PURECOV_INCLUDE = $(PURE_DIR)/include
# no proper installation here, so hack all three of these paths ...
# PURECOV_LIBS = $(PURE_DIR)/lib/libpurecov_stubs.a
# PURECOV_BIN = $(PURE_DIR)/bin
@PURECOV_TRUE@PURECOV_INCLUDE = $(PURE_DIR)/releases/purecov.i386_linux2.7.0
# yes, libs are in the same place as is the header file
@PURECOV_TRUE@PURECOV_LIBS = $(PURECOV_INCLUDE)/libpurecov_stubs.a
@PURECOV_TRUE@PURECOV_BIN = $(PURE_DIR)/bin
@PURECOV_TRUE@PURECOV_FLAGS = -g++=yes -chain-length=10  -inuse-at-exit \
@PURECOV_TRUE@	     -first-only -leaks-at-exit -copy-fd-output-to-logfile=1,2 \
@PURECOV_TRUE@	     -ignore-signals=SIGUSR1 -pointer-mask=0xfffffffe \
@PURECOV_TRUE@	     -threads -thread-stack-change=0x3000 -max_threads=64 \
@PURECOV_TRUE@	     -cache-dir=$(PURE_CACHE_DIR)

RESULT_COMPARISON_FILES = stats2-out \
	 box.2-out box.3-out box.4-out \
	 list1-out  darray-out memblock-out

EXTRA_DIST = testall test_stat.dat test_stat.h $(RESULT_COMPARISON_FILES) test_me.h
check_PROGRAMS = list1$(EXEEXT) list2$(EXEEXT) list3$(EXEEXT) \
		hash1$(EXEEXT) hash2$(EXEEXT) \
		ntime$(EXEEXT) \
			darray$(EXEEXT) \
			memblock$(EXEEXT) \
	        heap$(EXEEXT) \
	       	rc$(EXEEXT) \
			errlogtest$(EXEEXT) \
	       	random$(EXEEXT) \
	       	stats$(EXEEXT) \
	       	stats2$(EXEEXT) \
	       	box$(EXEEXT) \
	       	io$(EXEEXT) \
	       	ss$(EXEEXT) \
	       	rand$(EXEEXT) \
	       	container$(EXEEXT) \
	       	cuckoo$(EXEEXT) \
	       	findprime$(EXEEXT) \
	       	findsizes$(EXEEXT) \
	       	bitvector$(EXEEXT) \
	       	basic_sizes$(EXEEXT)

TESTS = testall
LDADD = ../libfc.a  $(LOCALLDADD)
memblock_SOURCES = memblock.cpp
darray_SOURCES = darray.cpp
basic_sizes_SOURCES = basic_sizes.cpp
ss_SOURCES = ss.cpp
list1_SOURCES = list1.cpp
list2_SOURCES = list2.cpp
list3_SOURCES = list3.cpp
hash1_SOURCES = hash1.cpp
hash2_SOURCES = hash2.cpp
ntime_SOURCES = ntime.cpp
heap_SOURCES = heap.cpp
rc_SOURCES = rc.cpp
errlogtest_SOURCES = errlogtest.cpp
random_SOURCES = random.cpp
stats_SOURCES = stats.cpp
stats2_SOURCES = test_stat.cpp stats2.cpp
box_SOURCES = box.cpp
io_SOURCES = io.cpp
rand_SOURCES = rand.cpp
container_SOURCES = container.cpp
findprime_SOURCES = findprime.cpp
findsizes_SOURCES = findsizes.cpp
cuckoo_SOURCES = cuckoo.cpp
bitvector_SOURCES = bitvector.cpp
TEST = testall
TEST_STAT_GENFILES = test_stat_struct_gen.h \
                     test_stat_msg_gen.h \
                     test_stat_collect_enum_gen.h \
                     test_stat_collect_gen.cpp \
                     test_stat_dec_gen.cpp \
                     test_stat_inc_gen.cpp \
                     test_stat_out_gen.cpp

GENFILES = $(TEST_STAT_GENFILES)
MOSTLYCLEANFILES = $(GENFILES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .purecov .pure .quant .$(OBJEXT) .common .cpp .dvi .fc .html .log .o .obj .pdf .ps .ssm .sthread .test .test$(EXEEXT) .tex .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/fc/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/fc/tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.generic $(top_srcdir)/Makefile.local $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

basic_sizes$(EXEEXT): $(basic_sizes_OBJECTS) $(basic_sizes_DEPENDENCIES) $(EXTRA_basic_sizes_DEPENDENCIES) 
	@rm -f basic_sizes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(basic_sizes_OBJECTS) $(basic_sizes_LDADD) $(LIBS)

bitvector$(EXEEXT): $(bitvector_OBJECTS) $(bitvector_DEPENDENCIES) $(EXTRA_bitvector_DEPENDENCIES) 
	@rm -f bitvector$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bitvector_OBJECTS) $(bitvector_LDADD) $(LIBS)

box$(EXEEXT): $(box_OBJECTS) $(box_DEPENDENCIES) $(EXTRA_box_DEPENDENCIES) 
	@rm -f box$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(box_OBJECTS) $(box_LDADD) $(LIBS)

container$(EXEEXT): $(container_OBJECTS) $(container_DEPENDENCIES) $(EXTRA_container_DEPENDENCIES) 
	@rm -f container$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(container_OBJECTS) $(container_LDADD) $(LIBS)

cuckoo$(EXEEXT): $(cuckoo_OBJECTS) $(cuckoo_DEPENDENCIES) $(EXTRA_cuckoo_DEPENDENCIES) 
	@rm -f cuckoo$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cuckoo_OBJECTS) $(cuckoo_LDADD) $(LIBS)

darray$(EXEEXT): $(darray_OBJECTS) $(darray_DEPENDENCIES) $(EXTRA_darray_DEPENDENCIES) 
	@rm -f darray$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(darray_OBJECTS) $(darray_LDADD) $(LIBS)

errlogtest$(EXEEXT): $(errlogtest_OBJECTS) $(errlogtest_DEPENDENCIES) $(EXTRA_errlogtest_DEPENDENCIES) 
	@rm -f errlogtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(errlogtest_OBJECTS) $(errlogtest_LDADD) $(LIBS)

findprime$(EXEEXT): $(findprime_OBJECTS) $(findprime_DEPENDENCIES) $(EXTRA_findprime_DEPENDENCIES) 
	@rm -f findprime$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(findprime_OBJECTS) $(findprime_LDADD) $(LIBS)

findsizes$(EXEEXT): $(findsizes_OBJECTS) $(findsizes_DEPENDENCIES) $(EXTRA_findsizes_DEPENDENCIES) 
	@rm -f findsizes$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(findsizes_OBJECTS) $(findsizes_LDADD) $(LIBS)

hash1$(EXEEXT): $(hash1_OBJECTS) $(hash1_DEPENDENCIES) $(EXTRA_hash1_DEPENDENCIES) 
	@rm -f hash1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hash1_OBJECTS) $(hash1_LDADD) $(LIBS)

hash2$(EXEEXT): $(hash2_OBJECTS) $(hash2_DEPENDENCIES) $(EXTRA_hash2_DEPENDENCIES) 
	@rm -f hash2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hash2_OBJECTS) $(hash2_LDADD) $(LIBS)

heap$(EXEEXT): $(heap_OBJECTS) $(heap_DEPENDENCIES) $(EXTRA_heap_DEPENDENCIES) 
	@rm -f heap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(heap_OBJECTS) $(heap_LDADD) $(LIBS)

io$(EXEEXT): $(io_OBJECTS) $(io_DEPENDENCIES) $(EXTRA_io_DEPENDENCIES) 
	@rm -f io$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(io_OBJECTS) $(io_LDADD) $(LIBS)

list1$(EXEEXT): $(list1_OBJECTS) $(list1_DEPENDENCIES) $(EXTRA_list1_DEPENDENCIES) 
	@rm -f list1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(list1_OBJECTS) $(list1_LDADD) $(LIBS)

list2$(EXEEXT): $(list2_OBJECTS) $(list2_DEPENDENCIES) $(EXTRA_list2_DEPENDENCIES) 
	@rm -f list2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(list2_OBJECTS) $(list2_LDADD) $(LIBS)

list3$(EXEEXT): $(list3_OBJECTS) $(list3_DEPENDENCIES) $(EXTRA_list3_DEPENDENCIES) 
	@rm -f list3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(list3_OBJECTS) $(list3_LDADD) $(LIBS)

memblock$(EXEEXT): $(memblock_OBJECTS) $(memblock_DEPENDENCIES) $(EXTRA_memblock_DEPENDENCIES) 
	@rm -f memblock$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(memblock_OBJECTS) $(memblock_LDADD) $(LIBS)

ntime$(EXEEXT): $(ntime_OBJECTS) $(ntime_DEPENDENCIES) $(EXTRA_ntime_DEPENDENCIES) 
	@rm -f ntime$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ntime_OBJECTS) $(ntime_LDADD) $(LIBS)

rand$(EXEEXT): $(rand_OBJECTS) $(rand_DEPENDENCIES) $(EXTRA_rand_DEPENDENCIES) 
	@rm -f rand$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rand_OBJECTS) $(rand_LDADD) $(LIBS)

random$(EXEEXT): $(random_OBJECTS) $(random_DEPENDENCIES) $(EXTRA_random_DEPENDENCIES) 
	@rm -f random$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(random_OBJECTS) $(random_LDADD) $(LIBS)

rc$(EXEEXT): $(rc_OBJECTS) $(rc_DEPENDENCIES) $(EXTRA_rc_DEPENDENCIES) 
	@rm -f rc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rc_OBJECTS) $(rc_LDADD) $(LIBS)

ss$(EXEEXT): $(ss_OBJECTS) $(ss_DEPENDENCIES) $(EXTRA_ss_DEPENDENCIES) 
	@rm -f ss$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ss_OBJECTS) $(ss_LDADD) $(LIBS)

stats$(EXEEXT): $(stats_OBJECTS) $(stats_DEPENDENCIES) $(EXTRA_stats_DEPENDENCIES) 
	@rm -f stats$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stats_OBJECTS) $(stats_LDADD) $(LIBS)

stats2$(EXEEXT): $(stats2_OBJECTS) $(stats2_DEPENDENCIES) $(EXTRA_stats2_DEPENDENCIES) 
	@rm -f stats2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stats2_OBJECTS) $(stats2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/basic_sizes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bitvector.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/box.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cuckoo.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/darray.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/errlogtest.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findprime.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/findsizes.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/io.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list3.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memblock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ntime.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rand.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ss.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stats2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_stat.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
testall.log: testall
	@p='testall'; \
	b='testall'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/basic_sizes.Po
	-rm -f ./$(DEPDIR)/bitvector.Po
	-rm -f ./$(DEPDIR)/box.Po
	-rm -f ./$(DEPDIR)/container.Po
	-rm -f ./$(DEPDIR)/cuckoo.Po
	-rm -f ./$(DEPDIR)/darray.Po
	-rm -f ./$(DEPDIR)/errlogtest.Po
	-rm -f ./$(DEPDIR)/findprime.Po
	-rm -f ./$(DEPDIR)/findsizes.Po
	-rm -f ./$(DEPDIR)/hash1.Po
	-rm -f ./$(DEPDIR)/hash2.Po
	-rm -f ./$(DEPDIR)/heap.Po
	-rm -f ./$(DEPDIR)/io.Po
	-rm -f ./$(DEPDIR)/list1.Po
	-rm -f ./$(DEPDIR)/list2.Po
	-rm -f ./$(DEPDIR)/list3.Po
	-rm -f ./$(DEPDIR)/memblock.Po
	-rm -f ./$(DEPDIR)/ntime.Po
	-rm -f ./$(DEPDIR)/rand.Po
	-rm -f ./$(DEPDIR)/random.Po
	-rm -f ./$(DEPDIR)/rc.Po
	-rm -f ./$(DEPDIR)/ss.Po
	-rm -f ./$(DEPDIR)/stats.Po
	-rm -f ./$(DEPDIR)/stats2.Po
	-rm -f ./$(DEPDIR)/test_stat.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/basic_sizes.Po
	-rm -f ./$(DEPDIR)/bitvector.Po
	-rm -f ./$(DEPDIR)/box.Po
	-rm -f ./$(DEPDIR)/container.Po
	-rm -f ./$(DEPDIR)/cuckoo.Po
	-rm -f ./$(DEPDIR)/darray.Po
	-rm -f ./$(DEPDIR)/errlogtest.Po
	-rm -f ./$(DEPDIR)/findprime.Po
	-rm -f ./$(DEPDIR)/findsizes.Po
	-rm -f ./$(DEPDIR)/hash1.Po
	-rm -f ./$(DEPDIR)/hash2.Po
	-rm -f ./$(DEPDIR)/heap.Po
	-rm -f ./$(DEPDIR)/io.Po
	-rm -f ./$(DEPDIR)/list1.Po
	-rm -f ./$(DEPDIR)/list2.Po
	-rm -f ./$(DEPDIR)/list3.Po
	-rm -f ./$(DEPDIR)/memblock.Po
	-rm -f ./$(DEPDIR)/ntime.Po
	-rm -f ./$(DEPDIR)/rand.Po
	-rm -f ./$(DEPDIR)/random.Po
	-rm -f ./$(DEPDIR)/rc.Po
	-rm -f ./$(DEPDIR)/ss.Po
	-rm -f ./$(DEPDIR)/stats.Po
	-rm -f ./$(DEPDIR)/stats2.Po
	-rm -f ./$(DEPDIR)/test_stat.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am: pdf-local

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am install install-am install-exec \
	install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-local \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am pdf-local ps ps-am recheck tags \
	tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# --------------------------------------------------------
#
# add target to create .cvsignore file
#
# --------------------------------------------------------
.cvsignore:  Makefile 
	touch $@
	$(RM) $@
	echo $(ALLCLEANFILES) >& $@

# --------------------------------------------------------
#
# add target to get rid of additional built objects,
#    in particular this is for the PURE targets
#
# --------------------------------------------------------
clean-local: 
	$(RM) $(LOCALCLEAN) 
@PURIFY_TRUE@.$(OBJEXT).pure:  
@PURIFY_TRUE@	$(PURIFY_BIN)/purify $(PURIFY_FLAGS)  $(PURIFY_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)
@QUANTIFY_TRUE@.$(OBJEXT).quant:  
@QUANTIFY_TRUE@	$(QUANTIFY_BIN)/quantify $(QUANTIFY_FLAGS) $(QUANTIFY_COLLECTOR)  $(CXX) -o $@ $< $(LDADD) $(LIBS)

SUFFIXES: .tex .fc .common .sthread .ssm .html .ps .dvi .pdf 

.fc.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.common.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.sthread.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.ssm.ps: 
	groff $(GROFF_OPTIONS) -Tps $< > $@

.fc.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.common.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.sthread.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.ssm.html: 
	groff $(GROFF_OPTIONS) -Thtml $< > $@

.fc.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.common.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.sthread.dvi: 
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.ssm.dvi:
	groff $(GROFF_OPTIONS) -Tdvi $< > $@

.dvi.pdf:
	dvipdfm $<

.tex.dvi:
	latex $<
# second time to get the x-refs
	latex $<

# html-local: $(HTML_TARGETS)

pdf-local: $(PDF_TARGETS)
@PURECOV_TRUE@.$(OBJEXT).purecov:  
@PURECOV_TRUE@	$(PURECOV_BIN)/purecov $(PURECOV_FLAGS)  $(PURECOV_COLLECTOR) $(CXX) -o $@ $< $(LDADD) $(LIBS)

$(RESULT_COMPARISON_FILES) : noop

noop:
testall:  $(check_PROGRAMS)

test_stat.$(OBJEXT): $(TEST_STAT_GENFILES)
stats.$(OBJEXT):  $(TEST_STAT_GENFILES)

$(TEST_STAT_GENFILES): test_stat.dat
	$(PERL) $(top_srcdir)/tools/stats.pl $?

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
